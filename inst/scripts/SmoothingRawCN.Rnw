%\VignetteIndexEntry{SmoothingRawCN copy number Vignette}
%\VignetteDepends{crlmm, genomewidesnp6Crlmm}
%\VignetteKeywords{crlmm, SNP 6}
%\VignettePackage{crlmm}
\documentclass{article}
\usepackage{graphicx}
\usepackage{natbib}
\usepackage{url}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textsf{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\oligo}{\Rpackage{oligo}}
\newcommand{\DNAcopy}{\Rpackage{DNAcopy}}
\newcommand{\VanillaICE}{\Rpackage{VanillaICE}}
\newcommand{\R}{\textsf{R}}
\newcommand{\crlmm}{\Rpackage{crlmm}}
\usepackage[margin=1in]{geometry}

\begin{document}
\title{Smoothing raw copy number estimates}

\date{\today}

\author{Rob Scharpf}
\maketitle

<<setup, echo=FALSE, results=hide>>=
options(prompt="R> ", continue=" ", width=70)
@

\begin{abstract}

  This vignette describes how segmentation algorithms and hidden
  Markov models implemented in the \R{} packages \DNAcopy{} and
  \VanillaICE{} packages, respectively, can be interfaced with the
  \crlmm{} raw copy number estimates.  This vignette assumes
  successfull completion of the \verb+copynumber+ vignette.

\end{abstract}

\section{Set up}

As in the previous vignettes, we load the required libraries and
specify a path for storing output files.

<<libraries,results=hide>>=
library(ff)
library(crlmm)
library(cacheSweave)
require(DNAcopy)
require(VanillaICE)
if(getRversion() < "2.13.0"){
	rpath <- getRversion()
} else rpath <- "trunk"
outdir <- paste("/thumper/ctsa/snpmicroarray/rs/ProcessedData/crlmm/", rpath, "/copynumber_vignette", sep="")
@

<<ram>>=
ldPath(outdir)
setCacheDir(outdir)
ocProbesets(50e3)
ocSamples(200)
@

We begin by loading the \Robject{cnSet} object created by the
\verb+AffymetrixPreprocessCN+ vignette.

<<loadcnset>>=
if(!exists("cnSet")) load(file.path(outdir, "cnSet.rda"))
@

\section{Interfacing with the \DNAcopy{} and \VanillaICE{} packages}

*This section is incomplete.*

As discussed in the \verb+copynumber+ vignette, we create an instance
of \Rclass{oligoSnpSet} class by using the method \Rfunction{as} for
subsets of the markers to keep the RAM at manageable levels (one can
specify smaller values of ocProbesets() to further reduce the RAM).

<<oligoset, eval=FALSE>>=
marker.index <- which(!is.na(chromosome(cnSet)))
marker.index <- marker.index[order(chromosome(cnSet)[marker.index], position(cnSet)[marker.index])]
marker.indices <- splitIndicesByLength(marker.index, ocProbesets())
cbs.results <- hmm.results <- vector("list", length(marker.indices))
open(cnSet)
##for(i in seq_along(marker.indices)){
for(i in 1:5){
	## pull data from disk for specified markers and all samples
	cnset.subset <- cnSet[marker.indices[[i]], seq(length=ncol(cnSet))]
	## coerce to an oligoSnpSet object with total copy number
	system.time(oligoset <- as(cnset.subset, "oligoSnpSet"))
	rm(cnset.subset); gc()
	stopifnot(class(copyNumber(oligoset)) == "matrix")

	CNA.object <- CNA(genomdat=copyNumber(oligoset),
			  chrom=chromosome(oligoset),
			  maploc=position(oligoset),
			  data.type="logratio",
			  sampleid=sampleNames(oligoset))
	## - smooth single point outliers (slow)
	smu.object <- smooth.CNA(CNA.object)
	rm(CNA.object); gc()

	## - run segmentation
	cbs.results[[i]] <- segment(smu.object)

	## update the copy number matrix for the HMM with outliers smoothed
	sample.index <- (1:(ncol(smu.object)-2)) + 2
	copyNumber(oligoset) <- as.matrix(smu.object[, sample.index])

	##calculate robustSds and store in cnConfidence
	sds <- robustSds(copyNumber(oligoset))
	cnConfidence(oligoset) <- 1/sds
	hmmOpts <- hmm.setup(oligoset,
			     c("hom-del", "hem-del", "normal", "amp1copy", "amp2copy"),
			     copynumberStates=c(0:4),
			     normalIndex=3,
			     log.initialP=rep(log(1/5), 5),
			     prGenotypeHomozygous=c(0.8, 0.99, 0.7, 0.75, 0.75))
	## fit the hmm
	hmm.results[[i]] <- hmm(oligoset, hmmOpts, verbose=FALSE, TAUP=1e10)
	rm(oligoset, sds, smu.object, CNA.object, hmmOpts); gc()
}
close(cnSet)
save(hmm.results, file=file.path(outdir, "hmm.results.rda"))
save(cbs.results, file=file.path(outdir, "cbs.results.rda"))
@

%\section{HMM in the \VanillaICE{} package}


\end{document}
