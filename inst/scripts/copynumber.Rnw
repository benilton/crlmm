%\VignetteIndexEntry{crlmm copy number Vignette}
%\VignetteDepends{crlmm, genomewidesnp6Crlmm}
%\VignetteKeywords{crlmm, SNP 6}
%\VignettePackage{crlmm}
\documentclass{article}
\usepackage{graphicx}
\usepackage{natbib}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textsf{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\oligo}{\Rpackage{oligo }}
\newcommand{\R}{\textsf{R}}
\usepackage[margin=1in]{geometry}

\begin{document}
\title{Copy number estimation and genotype calling with \Rpackage{crlmm}}
\date{May, 2009}
\author{Rob Scharpf}
\maketitle

<<setup, echo=FALSE, results=hide>>=
options(continue=" ")
options(prompt="R> ")
@ 

%\section{Estimating copy number}

%At present, software for copy number estimation is provided only for the
%Affymetrix 6.0 platform.  

\begin{abstract}
  This vignette estimates copy number for HapMap samples on the
  Affymetrix 6.0 platform.  See \citep{Scharpf2009} for the working
  paper.
  
\end{abstract}

\section{Simple usage}

CRLMM supports the following platforms:

<<cdfname>>=
library(crlmm)
crlmm:::validCdfNames()
@ 

\paragraph{Preprocess and genotype.}

Provide the complete path for the filenames:

<<celfiles>>=
celFiles <- list.celfiles("/thumper/ctsa/snpmicroarray/hapmap/raw/affy/1m", full.names=TRUE, pattern=".CEL")
## CEPH and Yoruban files
batch <- substr(basename(celFiles), 13, 13)
celFiles <- celFiles[batch %in% c("C", "Y")]
batch <- batch[batch %in% c("C", "Y")]
@ 

While genotyping with crlmm can be performed using a small number of
samples, copy number estimation requires at least 10 samples --
preferably all of the samples that were processed together on the same
plate.  Crlmm does not use a reference dataset when estimating model
parameters because of large batch effects \citep{Scharpf2009}. The
quantile normalization performed as part of the preprocessing of the raw
data is insufficient for removing batch effects.  Processing a reference
dataset, such as HapMap samples, along with the experimental data will
not improve copy number estimation for the experimental dataset, and
should not be used as a means to increase the sample size. Furthermore,
processing a reference dataset without acknowledging that these samples
were derived from a different batch can result in incorrect copy number
estimates in both the experimental and reference datasets.  The
appropriate way to acknowledge batch is to supply the batch name for
each sample to be processed in the argument to \Robject{cnOptions}:

<<celfiles>>=
cnOpts <- cnOptions(cdfName="genomewidesnp6",
		    outdir="/thumper/ctsa/beaty/scharpf/crlmmOut/hapmap",
		    batch=batch)
str(cnOpts)
stopifnot(length(cnOpts$batch) == length(celFiles))
names(cnOpts$batch) <- basename(celFiles)
@ 

\noindent The next code chunk quantile normalizes the samples to a
target reference distribution, uses the crlmm algorithm to genotype, and
then estimates the copy number for each batch. Currently processing the
180 HapMap cel files will require less than 20G of RAM. We are working
on methods to reduce the memory footprint.

<<preprocessAndGenotype, echo=TRUE>>=
if(FALSE) crlmmCopynumber(celFiles, cnOpts) 
load(file.path(cnOpts[["outdir"]], "cnSet_21.rda"))
@ 

The following R objects are created from crlmmCopynumber:

<<crlmmSetListObjects>>=
fns <- list.files(cnOpts[["outdir"]], pattern="cnSet", full.name=TRUE)
basename(fns)[1:5]
@ 


The above algorithm for estimating copy number is predicated on the
assumption that most samples within a batch have copy number 2 at any
given locus.  For common copy number variants, this assumption may not
hold.  An additional iteration using a bias correction provides
additional robustness to this assumption.  Set the \Robject{bias.adj}
argument to \Robject{TRUE}:

<<biasAdjustment, eval=FALSE>>=
cnOpts[["bias.adj"]] <- TRUE
if(FALSE) crlmmCopynumber(celFiles, cnOpts)
@ 

\section{Accessors}

\subsection{Assay data accessors}

\paragraph{\Robject{ABset}:  quantile normalized intensities}

An object of class \Robject{ABset} is stored in the first element of the
\Robject{crlmmSetList} object. The following accessors may be of use:

Accessors for the quantile normalized intensities for the A allele at
polymorphic loci:

<<accessors>>=
a <- A(cnSet)[isSnp(cnSet), ]
dim(a)
@ 

The quantile-normalized intensities for nonpolymorphic loci are obtained by:

<<>>=
npIntensities <- A(cnSet)[!isSnp(cnSet), ]
@ 

Quantile normalized intensities for the B allele at polymorphic loci:

<<B.polymorphic>>=
b.snps <- B(cnSet[isSnp(cnSet), ])
@ 

Note that NAs are recorded in the 'B' assay data element for
nonpolymorphic loci:

<<B.NAs>>=
all(is.na(B(cnSet[!isSnp(cnSet), ])))
@ 

\paragraph{\Robject{SnpSet}: Genotype calls and confidence scores}

Genotype calls:
<<genotypes>>=
genotypes <- snpCall(cnSet)
@ 
Confidence scores of the genotype calls:
<<confidenceScores>>=
genotypeConf <- confs(cnSet[isSnp(cnSet), ])
@ 

\paragraph{\Robject{CopyNumberSet}: allele-specific copy number}

Allele-specific copy number at polymorphic loci:
<<ca>>=
ca <- CA(cnSet[isSnp(cnSet), ])
@ 

Total copy number at nonpolymorphic loci:
<<ca>>=
cn.nonpolymorphic <- CA(cnSet[!isSnp(cnSet), ])
@ 

Total copy number at both polymorphic and nonpolymorphic loci:
<<totalCopynumber>>=
cn <- copyNumber(cnSet)
@ 

\subsection{Other accessors}

Information on physical position and chromosome can be accessed by the
following accessors:

<<positionChromosome, eval=FALSE>>=
xx <- position(cnSet)
yy <- chromosome(cnSet)
@ 

There are many parameters computed during copy number estimation that
are at present stored in the \Robject{featureData} slot.  In particular,
the estimation procedure fits a linear model to the normalized
intensities for each allele. These parameters are not generally meant to
be extracted by the user; for now we just mention where they are stored.

<<copynumberParameters>>=
fvarLabels(cnSet)
@ 

\paragraph{SNR.}

A histogram of the signal to noise ratio for the HapMap samples:

<<plotSnr, fig=TRUE, include=FALSE>>=
hist(cnSet$SNR, xlab="SNR", main="")
@ 

\begin{figure}
  \centering
  \includegraphics[width=0.6\textwidth]{copynumber-plotSnr}
  \caption{Signal to noise ratios for the HapMap samples.}
\end{figure}

\paragraph{Data/Batch.}
For Affymetrix 6.0, we currently suggest excluding or flagging samples
with a signal to noise ratio less than 5.  Adjusting by date or
chemistry plate can be helpful for limiting the influence of batch
effects.  Ideally, one would have 70+ files in a given batch. Here we
make a table of date versus ancestry (batch):

<<specifyBatch, eval=FALSE, echo=FALSE>>=
table(format(as.POSIXlt(protocolData(cnSet)[["ScanDate"]]), "%d %b %Y"), cnSet$batch)
@ 

As all of these samples were run on the first week of March, we would
expect that any systematic artifacts to the intensities that develop
over time to be minimal (a best case scenario).  

\section{Suggested visualizations}

\paragraph{One sample at a time: locus-level estimates}

Figure \ref{fig:oneSample} plots physical position (horizontal axis)
versus copy number (vertical axis) for the first sample.  There is less
information to estimate copy number at nonpolymorphic loci; improvements
to the univariate prediction regions at nonpolymorphic loci are a future
area of research.  

<<oneSample, fig=TRUE, width=8, height=4, include=FALSE>>=
par(las=1, mar=c(4, 5, 4, 2))
plot(position(cnSet), copyNumber(cnSet)[, 1], pch=".", 
     cex=2, xaxt="n", col="grey20", ylim=c(0,6), 
     ylab="copy number", xlab="physical position (Mb)",
     main=paste(sampleNames(cnSet)[1], ", CHR:", unique(chromosome(cnSet))))
points(position(cnSet)[!isSnp(cnSet)], copyNumber(cnSet)[!isSnp(cnSet), 1],
       pch=".", cex=2, col="lightblue")
axis(1, at=pretty(range(position(cnSet))), labels=pretty(range(position(cnSet)))/1e6)
@ 

<<idiogram, eval=FALSE, echo=FALSE>>=
require(SNPchip)
plotCytoband(22, new=FALSE, cytoband.ycoords=c(5.8, 6.0), label.cytoband=FALSE)
@ 

\begin{figure}
  \includegraphics[width=0.9\textwidth]{copynumber-oneSample}
  \caption{\label{fig:oneSample} Total copy number (y-axis) for
    chromosome 22 plotted against physical position (x-axis) for one
    sample.  Estimates at nonpolymorphic loci are plotted in light
    blue.}
\end{figure}

%
%<<overlayHmmPredictions, fig=TRUE, include=FALSE>>=
%ask <- FALSE
%op <- par(mfrow=c(3, 1), las=1, mar=c(1, 4, 1, 1), oma=c(3, 1, 1, 1), ask=ask)
%##Put fit on the copy number scale
%cns <- copyNumber(cnSet)
%cnState <- hmmPredictions - as.integer(1)
%xlim <- c(10*1e6, max(position(cnSet)))
%cols <- brewer.pal(8, "Dark2")[1:4]
%for(j in 1:3){
%	plot(position(cnSet), cnState[, j], pch=".", col=cols[2], xaxt="n", 
%	     ylab="copy number", xlab="Physical position (Mb)", type="s", lwd=2,
%	     ylim=c(0,6), xlim=xlim)
%	points(position(cnSet), cns[, j], pch=".", col=cols[3])
%	lines(position(cnSet), cnState[,j], lwd=2, col=cols[2])
%	axis(1, at=pretty(position(cnSet)), 
%	     labels=pretty(position(cnSet))/1e6)
%	abline(h=c(1,3), lty=2, col=cols[1])	
%	legend("topright", bty="n", legend=sampleNames(cnSet)[j])
%	legend("topleft", lty=1, col=cols[2], legend="copy number state",
%	       bty="n", lwd=2)
%	plotCytoband(CHR, cytoband.ycoords=c(5, 5.2), new=FALSE,
%		     label.cytoband=FALSE, xlim=xlim)
%}
%par(op)
%@ 
%
%\begin{figure}
%  \includegraphics[width=\textwidth]{copynumber-overlayHmmPredictions}
%  \caption{\label{fig:overlayHmmPredictions} Total copy number (y-axis)
%    for chromosome 22 plotted against physical position (x-axis) for
%    three samples.  Estimates at nonpolymorphic loci are plotted in
%    light blue. }
%\end{figure}

\clearpage
\paragraph{One SNP at a time}

Scatterplots of the A and B allele intensities (log-scale) can be useful
for assessing the biallelic genotype calls.  The following code chunk is
displayed in Figure \ref{fig:genotypeCalls}.

<<genotypeCalls, fig=TRUE, width=8, height=8, include=FALSE>>=
myScatter <- function(object, add=FALSE, ...){
	A <- log2(A(object))
	B <- log2(B(object))
	if(!add){
		plot(A, B, ...)
	} else{
		points(A, B, ...)
	}
}
index <- which(isSnp(cnSet))[1:9]
xlim <- ylim <- c(6.5,13)
par(mfrow=c(3,3), las=1, pty="s", ask=FALSE, mar=c(2, 2, 2, 2), oma=c(2, 2, 1, 1))
for(i in index){
	gt <- calls(cnSet)[i, ]
	if(i != 89){
		myScatter(cnSet[i, ], 
			  pch=pch, 
			  col=colors[snpCall(cnSet)[i, ]], 
			  bg=colors[snpCall(cnSet)[i, ]], cex=cex,
			  xlim=xlim, ylim=ylim)
		mtext("A", 1, outer=TRUE, line=1)
		mtext("B", 2, outer=TRUE, line=1)	
		crlmm:::ellipse.CNSet(cnSet[i, ], copynumber=2, batch="C", lwd=2, col="black")
		crlmm:::ellipse.CNSet(cnSet[i, ], copynumber=2, batch="Y", lwd=2, col="grey50")
	} else {
		plot(0:1, xlim=c(0,1), ylim=c(0,1), type="n", xaxt="n", yaxt="n")
		legend("center",
		       legend=c("CN = 2, CEPH", "CN = 2, Yoruban"),
		       col=c("black", "grey50"), lwd=2, bty="n")
	}
}
@

\begin{figure}
  \centering
  \includegraphics[width=0.8\textwidth]{copynumber-genotypeCalls}
  \caption{\label{fig:genotypeCalls} Scatterplots of A versus B
    intensities.  Each panel displays a single SNP. The ellipses
    indicate the 95\% probability region for copy number 2 for the CEPH
    (black) and Yoruban subjects (grey).}
\end{figure}

%\section{Details for the copy number estimation procedure}
%
%See the technical report \citep{Scharpf2009}.

\section{Session information}
<<sessionInfo, results=tex>>=
toLatex(sessionInfo())
@ 

\section*{References}

%\begin{bibliography}
  \bibliographystyle{plain}
  \bibliography{refs}
%\end{bibliography}

\end{document}
